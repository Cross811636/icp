#lang scheme/base

;; This data taken from http://robotics.caltech.edu/wiki/index.php/ME131_Lab_1
;; Format:
;;
;;    x y theta r1 r2 r3 ... rN 
;;
;; (where x and y are in meters and theta is in radians; r1 is the range of the first laser scan pt and corresponds to a bearing of -90 deg and increments by +0.5 deg for each range measurement thereafter up to +90 deg, i.e. (r,phi):: (r2,-89.5 deg), (r3,-89.0 deg), etc) The (x,y,theta) values are the output from the odometry in Stage. 

(require scheme/list
         scheme/math
         (planet schematics/numeric:1/vector)
         "pose.ss"
         "point.ss")

(define scan1 
'(0 0 0 7.98001 7.98031 7.98123 7.98275 7.98487 7.98761 7.99096 7.99492 7.9995 8 8 8 8 8 8 8 8 8 8 8 8 8 8 7.82493 7.69576 7.57967 7.46849 7.45381 7.35798 7.2303 7.1227 6.99438 6.89331 6.83081 6.77241 6.66864 6.54008 6.49238 6.45045 6.36508 6.25713 6.22509 6.14835 6.05745 6.03317 5.93149 5.93776 5.82293 5.80245 5.73648 5.67904 5.62825 5.56622 5.54228 5.46282 5.43395 5.36789 5.34807 5.28055 5.28014 5.20014 5.1762 5.12596 5.09003 5.05752 4.98804 4.99427 4.92823 4.92132 4.87295 4.81204 4.82187 4.76377 4.75203 4.75243 4.69818 4.66993 4.65864 4.60826 4.61358 4.57395 4.52704 4.53147 4.49741 4.45365 4.47028 4.42828 4.38739 4.39283 4.36586 4.3276 4.33714 4.30961 4.27375 4.29351 4.25901 4.22538 4.22556 4.21362 4.18206 4.16925 4.17309 4.14345 4.11452 4.12554 4.10922 4.08203 4.06833 4.07909 4.05355 4.02862 4.02526 4.02884 4.00542 3.98256 4.00769 3.98569 3.96422 3.94328 3.97984 3.97222 3.95246 3.93319 3.95993 3.9414 3.92335 3.90575 3.93328 3.91639 3.89994 3.88392 3.91228 3.89693 3.88199 3.86746 3.89664 3.88275 3.86925 3.89899 3.88613 3.87363 3.86151 3.89206 3.88055 3.8694 3.85861 3.89 3.87979 3.86993 3.86042 3.89266 3.88372 3.87512 3.86686 3.89997 3.89228 3.88491 3.87786 3.91189 3.90541 3.89925 3.89341 3.92837 3.9231 3.91814 3.91349 3.94945 3.94537 3.9416 3.93814 3.97514 3.97225 3.96968 3.96741 4.02553 4.02384 4.02246 4.02139 4.06063 4.06016 4.06001 4.10016 4.10062 4.10141 4.1025 4.14394 4.14568 4.14774 4.19021 4.19293 4.19597 4.23952 4.24325 4.2473 4.25169 4.29676 4.30187 4.30731 4.3536 4.35979 4.36633 4.41391 4.42123 4.42891 4.47785 4.48634 4.49521 4.5456 4.55531 4.56542 4.61733 4.62833 4.63974 4.69327 4.70561 4.71838 4.77364 4.7874 4.86506 4.8799 4.93778 4.95371 4.97011 5.03 5.04754 5.10889 5.12762 5.1905 5.21047 5.23099 5.29621 5.31806 5.38499 5.40822 5.47695 5.50162 5.57224 5.59843 5.67104 5.69882 5.7735 5.80296 5.87983 5.95796 5.99023 6.07073 6.17644 6.21188 6.29646 6.38252 6.42127 8 8 8 8 8 8 8 8 8 8 5.66635 5.60925 5.49334 5.43989 5.38788 5.33726 5.22986 5.1824 5.13619 5.0346 4.99123 4.94898 4.90781 4.86769 4.77432 4.73663 4.69988 4.66405 4.62911 4.56893 4.53588 4.50366 4.47223 4.44156 4.36123 4.33239 4.30425 4.2768 4.25001 4.22388 4.14985 4.12527 4.10128 4.07788 4.05506 4.03279 3.96416 3.94322 3.9228 3.90289 3.88347 3.86454 3.84608 3.78278 3.76546 3.74857 3.73212 3.71609 3.70048 3.68528 3.67049 3.6123 3.59846 3.58499 3.57189 3.55916 3.54679 3.53478 3.52311 3.51179 3.47958 3.469 3.45873 3.4488 3.43918 3.42987 3.42087 3.41218 3.40379 3.35429 3.3466 3.33919 3.33207 3.32523 3.31867 3.31238 3.30638 3.30064 3.2545 3.24937 3.2445 3.23989 3.23554 3.23145 3.22761 3.22403 3.2207 3.29807 3.3387 3.39291 3.4707 3.46845 3.52658 3.645 3.66809 3.72227 3.7813 3.90059 3.98015))

(define scan2
'(0.1 0 0.10472 8 8 8 8 8 8 8 8 8 8 7.80337 7.67406 7.56532 7.43627 7.32781 7.1989 7.10995 7.02955 6.9549 6.86985 6.74113 6.63315 6.56719 6.51821 6.41391 6.32694 6.26617 6.21656 6.10837 6.05373 5.9984 5.89373 5.91035 5.8013 5.7842 5.69208 5.65491 5.58264 5.53707 5.4953 5.42933 5.38584 5.33065 5.29867 5.24005 5.23428 5.15679 5.12431 5.08011 5.03694 5.00947 4.93793 4.94427 4.87635 4.8648 4.81951 4.75697 4.76701 4.70743 4.69216 4.69572 4.64015 4.60781 4.59961 4.54807 4.54884 4.51292 4.46497 4.46443 4.43464 4.38996 4.40606 4.36399 4.32227 4.32068 4.30021 4.26119 4.2621 4.24274 4.2062 4.2262 4.19104 4.15677 4.14444 4.14464 4.11249 4.0849 4.10316 4.07295 4.04349 4.036 4.03786 4.01018 3.98318 4.00691 3.98089 3.95549 3.93072 3.95538 3.93151 3.90822 3.91336 3.91102 3.88912 3.86777 3.8659 3.89662 3.87642 3.85674 3.85835 3.86458 3.84611 3.82812 3.81154 3.83838 3.82154 3.80513 3.80934 3.81771 3.80239 3.78746 3.77295 3.80229 3.7884 3.7749 3.80477 3.79188 3.77936 3.76721 3.79786 3.7863 3.7751 3.76425 3.79097 3.78542 3.77549 3.7659 3.79816 3.78913 3.78043 3.77206 3.76947 3.79734 3.78985 3.78268 3.81186 3.81002 3.80371 3.79771 3.79202 3.82713 3.82199 3.81716 3.83058 3.8487 3.84472 3.84105 3.83768 3.87475 3.87195 3.86944 3.92734 3.92539 3.92374 3.9224 3.92135 3.96061 3.96016 3.96001 4.00015 4.00061 4.00137 4.00244 4.04385 4.04554 4.04755 4.08996 4.09262 4.09558 4.13906 4.14269 4.14666 4.15094 4.1959 4.20088 4.2062 4.25235 4.2584 4.26479 4.27153 4.31936 4.32686 4.37562 4.38392 4.39258 4.40162 4.45225 4.46213 4.47239 4.52456 4.53571 4.54726 4.60104 4.61353 4.66849 4.68195 4.69584 4.77382 4.7888 4.84695 4.863 4.87953 4.93969 4.95736 5.01898 5.03784 5.10101 5.1211 5.14174 5.20726 5.22923 5.29648 5.31983 5.38889 5.41368 5.48465 5.51097 5.58392 5.61184 5.6869 5.7165 5.79377 5.87231 5.90473 5.98566 6.09196 6.12759 6.21264 6.2992 6.33817 8 8 8 8 8 8 8 8 8 8 5.60925 5.55371 5.43989 5.38788 5.33726 5.28797 5.1824 5.13619 5.09117 5.04732 4.94898 4.90781 4.86769 4.82858 4.73663 4.69988 4.66405 4.62911 4.59503 4.5618 4.50366 4.47223 4.44156 4.41165 4.38247 4.35401 4.2768 4.25001 4.22388 4.19839 4.17351 4.10128 4.07788 4.05506 4.03279 4.01107 3.98989 3.96922 3.90289 3.88347 3.86454 3.84608 3.82809 3.81055 3.79346 3.73212 3.71609 3.70048 3.68528 3.67049 3.65609 3.64207 3.62844 3.57189 3.55916 3.54679 3.53478 3.52311 3.51179 3.5008 3.49015 3.47982 3.4488 3.43918 3.42987 3.42087 3.41218 3.40379 3.39571 3.38791 3.38041 3.33207 3.32523 3.31867 3.31238 3.30638 3.30064 3.29518 3.28998 3.28505 3.28039 3.23554 3.23145 3.22761 3.22403 3.2207 3.21763 3.2148 3.21222 3.29014 3.28801 3.38632 3.43932 3.4633 3.52215 3.64125 3.64055 3.72014 3.78 3.90015 3.98061 4.0814 4.08249 4.16396 4.22579 4.34811 4.43079 4.49385 4.69788 4.76192))

(define (degrees->radians d)
  (define r (/ (* 2 pi d) 360))
  '(if (< r 0.0)
      (+ (* 2 pi) r)
      r)
  r)

;; (Listof Number) -> (values Pose (Vectorof Polar))
;;
;; Returns pose and scan points respectively
(define (process-scan scan)
  (define pose (make-pose (list-ref scan 0) (list-ref scan 1) (list-ref scan 2)))
  (define points
    (list->vector
     (for/list ([r (in-list (list-tail scan 3))]
                [a (in-range -90 90 .5)])
               (make-polar r (degrees->radians a)))))
  (values pose points))

;; Write the polar and cartesian coordinates to file, in a format usable by Gnuplot
(define (write-scan scan file-name)
  (define-values (pose points) (process-scan scan))
  (with-output-to-file file-name
    (lambda ()
      (for ([pt (in-vector points)])
           (let ([p (polar->cartesian pt)])
             (printf "~a ~a ~a ~a\n" (polar-r pt) (polar-a pt) (cartesian-x p) (cartesian-y p)))))
    #:exists 'replace))
           

(provide
 scan1
 scan2

 degrees->radians
 
 process-scan
 write-scan)